#include <wiringPi.h>
#include <stdio.h>
#include <sys/time.h>
#define TRIG 29
#define ECHO 28
#define LED  4

float distanceMeasure(void)
{
struct timeval tv1;
struct timeval tv2;
long time1, time2;
float distance;

digitalWrite(TRIG, LOW);//TRIGを初期化
delayMicroseconds(2);
digitalWrite(TRIG, HIGH);//TRIGをhighに設定
delayMicroseconds(10);//10μsTRIGを立ち上げることでパルス波を発信する
digitalWrite(TRIG, LOW);//TRIGをLowに設定

while(!(digitalRead(ECHO) == 1))//ECHOの立ち上がりを待つ(電波送信終了を待つ)
gettimeofday(&tv1, NULL);//現在の時刻を読み取る

while(!(digitalRead(ECHO) == 0));//ECHOのたち下がりを待つ(電波受信を待つ)
gettimeofday(&tv2, NULL);//現在の時刻を読み取る

time1 = tv1.tv_sec * 1000000 + tv1.tv_usec;//開始時間を計算
time2 = tv2.tv_sec * 1000000 + tv2.tv_usec;//終了時間を計算
distance = (float)(time2 - time1) / 1000000 * 34000 / 2;//応答時間と音速(340m/s)から距離を計算
return distance;
}

int main(void){

float distance;

if(wiringPiSetup() == -1){ 
    return 1;
}

pinMode(ECHO, INPUT); //ECHOを入力に設定
pinMode(TRIG, OUTPUT);//TRIGを出力に設定
pinMode(LED, OUTPUT); //LEDを出力に設定

while(1){
    distance = distanceMeasure();
    printf("%0.1f cm\n",distance);//距離を出力
	if (distance < 30) { 
		digitalWrite(LED, HIGH);	//距離が30cm未満だったらLED点灯
	} else {
		digitalWrite(LED, LOW);		//距離が30cm以上だったらLED消灯
	}
    delay(1000);
}
return 0;
}
